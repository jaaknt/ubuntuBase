---
# all hosts variables default values
swap_flag: false
java_flag: false
jenkins_flag: false
ansible_flag: false
ansible_keys_flag: false
docker_flag: false
nodejs_flag: false
postgres_flag: false
gradle_flag: false
letsencrypt_flag: false
nginx_flag: false
terraform_flag: false
awscli_flag: false
prometheus_node_exporter_flag: false
prometheus_flag: false
install_prometheus: false
install_alertmanager: false
install_blackbox_exporter: false
grafana_flag: false

# sshd
sshd_PasswordAuthentication: no

# ansible
ansible_vault_user: ansible
vault_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38653061656263333265363264326266663830336631353166303132616166626235613661386332
          6330616139363165633863393963663465336164333962380a663066343439356134363931663133
          64353462326162326333316433313133313034666130653163613230646161343562633863336163
          6136333031353363340a313335623438366430373439363435366563356333303161316230633338
          32383161656538613635373232656139393035366330346563356566346461626231

# postgresql
postgresql_version: 9.6
postgresql_listen_addresses: '*'
postgresql_pg_hba_custom:
- {type: host,  database: all, user: all, address: '0.0.0.0/0', method: 'md5', comment: 'IPv4 allow connections from everywhere' }


postgresql_shared_preload_libraries: [
  'pg_stat_statements'
]

# gradle
gradle_version: 4.1

# aws-cli
aws_output_format: 'json'
aws_region: 'eu-central-1'
aws_access_key_id: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          36366538313566663733653162653036663966623738643764353961643630623836343062343833
          3539656437663666323938646539643166633262366132610a656364313630316532653664633264
          63643366616332333730396236316335373261396465616537313236323339383563386532393830
          3366306637343061640a366135323664616366353732316131653162323939666166626363336534
          34313733306334393861323536363438346437353437343161616463356339333233
aws_secret_access_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33333463306464303033663331633161353863393764656164306239383633333436656662303061
          3134353735353762343833313530306164386435636138640a343366656465366235646233333566
          35353030303166396437366132396364356338346231666330333736616632313031393564623165
          3937356635393532370a366631353636396235633032333933313733633834356433373536656433
          35343063623764663561623432393163316563393334343363373461623665386561313338383365
          6132336366383737323132373130306130666139333932653164

# docker
docker_edition: 'ce'
docker_package_state: present
docker_install_compose: false

# terraform
#terraform_ver: '0.10.4'

#terraform_checksums:
#  linux_amd64: sha256:cff83f669d0e4ac315e792a57659d5aae8ea1fcfdca6931c7cc4679b4e6c60e3

terraform_providers:
  - provider: aws
    version: 0.1.4
    checksums:
      linux_amd64: sha256:530c25b88b2cf4c4c4e0b63b91fadd604e89ce58e6e780ea5f011cca029c5611
  - provider: digitalocean
    version: 0.1.2
    checksums:
      linux_amd64: sha256:3a2041045d6e032af43fe667cef5ce11bd5ab84024d9aa7c78ec5edfcaa16dbc

# prometheus
# 1. blackbox_exporter
path: /opt
blackbox_exporter_modules:
  http_health:
    prober: http
    http:
      fail_if_not_matches_regexp:
      - "UP"
  http_post_2xx:
    prober: http
    http:
      method: POST
  tcp_connect:
    prober: tcp
  pop3s_banner:
    prober: tcp
    tcp:
      query_response:
      - expect: "^+OK"
      tls: true
      tls_config:
        insecure_skip_verify: false
  ssh_banner:
    prober: tcp
    tcp:
      query_response:
      - expect: "^SSH-2.0-"
  irc_banner:
    prober: tcp
    tcp:
      query_response:
      - send: "NICK prober"
      - send: "USER prober prober prober :prober"
      - expect: "PING :([^ ]+)"
        send: "PONG ${1}"
      - expect: "^:[^ ]+ 001"
  icmp:
    prober: icmp

# prometheus
prometheus_commandline_args:
  config.file: "/prometheus-data/prometheus.yml"
  alertmanager.url: "http://{{ alertmanager_ip }}:9093"
  storage.local.path: "/prometheus-data/data"
  web.console.libraries: "/etc/prometheus/console_libraries"
  web.console.templates: "/etc/prometheus/consoles"

prometheus_scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 10s
    scrape_timeout:  10s
    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'node'
    scrape_interval: 15s
    static_configs:
      - targets:
        - "{{ ansible_default_ipv4.address }}:9100"
  - job_name: 'cadvisor'
    scrape_interval: 15s
    static_configs:
      - targets:
        - localhost:9280
  - job_name: 'blackbox'
    scrape_interval: 15s
    metrics_path: /probe
    params:
      module: [http_health]
    static_configs:
      - targets:
        - test.icefireteijorpwot1puon.eu:8088/health
        - test.icefireteijorpwot1puon.eu:8087/factoring/health
        - test.icefireteijorpwot1puon.eu:8086/factoring-batch/health
        - test.icefireteijorpwot1puon.eu:9000/kyb/health
        - test.icefireteijorpwot1puon.eu:8070/bo/health
        labels:
          environment: 'development'
      - targets:
        - teijo.vuola.io/health
        - teijo.vuola.io/factoring/health
        - teijo.vuola.io/factoring-batch/health
        - teijo.vuola.io/kyb/health
#        - teijo.vuola.io/bo/health
        labels:
          environment: 'test'
      - targets:
        - https://op-laskulaina.fi/health
        - https://op-laskulaina.fi/factoring/health
        - https://op-laskulaina.fi/factoring-batch/health
        - https://op-laskulaina.fi/kyb/health
#        - https://op-laskulaina.fi/bo/health
        labels:
          environment: 'production'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__address__]
        target_label: instance
      - source_labels: []
        target_label: __address__
        replacement: "{{ ansible_default_ipv4.address }}:9115"

